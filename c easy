Easy Questions
1.	Compile and Execute the C program to calculate Arithmetic Operators Functions such as Pow(x,n), Add(x,n), Sub(x,n), Mul(x,n), Div(x,n), where x and n are the two operands.  Get the input and choice from the user.
Sample Input:
X = 2
N = 4
Choice : 2
Sample Output:
Add(X,N) = 6

Test cases:
1.	X = 0 , N = 4
2.	X = 5 , N = 0
3.	X = -3 , N = 3
4.	X = 0 ,  N = 0
5.	X = 123, N = 123
Source code:
  #include<stdio.h>
  int a,b,c,d,e,f,x,z=1;
  int choice()
  {
  	scanf("%d",&x);
  	if(x==1){
  		while (b != 0) {
        z *= a;
        --b;
    }
    printf("Power of given numbers is %d\n",z);
	  }
  	else if (x==2)
	{
   	c=add(a,b);
   	printf("Sum of given numbers is %d\n",c);
   }
   else if (x==3)
   { 
   	d=sub(a,b);
   	printf("differnce of given numbers is %d\n",d);
   }
   else if (x==4)
   {
	e=mul(a,b);
	printf("product of given numbers is %d\n",e);
	}
	else if (x==5)
	{
	f=div(a,b);
	printf("quotient of given numbers is %.2f",f);
	}
	else
	{
	printf("invalid input... Try again\n");
	choice();
	}
}
   int add(int x,int y)
   {
   	int z;
   	z=x+y;
   	return z;
   }
   int sub(int x,int y)
   {
   	int z;
   	if (x>y)
   	{
   	z=x-y;
   }
   else
   {
   z=y-x;
   return z;
	}
}
   int mul(int x,int y)
   {
   	int z;
   	z=x*y;
   	return z;
   }
    int div(int x,int y)
   {
   	int z;
   	z=(float)x/y;
   	return z;
   }
   main()
   {
   	printf("Enter 2 numbers:\n");
	scanf("%d%d",&a,&b);
	printf("Choose an opertaion:\n 1:power\n 2:addition\n 3:subtraction\n 4:multiplication\n 5:division\n");
	choice();
   	
 }
2.	Compile and Execute the C program to change all the digits of a number to bring the digit at the last position to the first position and vice-versa using loop. Get the input from user.
Sample Input:
Number: 14567
Sample Output:
Reverse Number: 76541
Test cases:
1.	-45721
2.	000
3.	AD1947
4.	!@#$%
5.	145*999=144855
Source code:
#include <stdio.h>

main() {
  char str[100];
  int i,n, reverse = 0, remainder,x=0,len,y,temp;
  printf("Enter an integer: ");
  scanf("%d", &n);
  //n = atoi(str);
  if(n>0){
  sprintf(str, "%d", n);
  len=strlen(str);
  for(i=0;i<len;i++){
  	y=isdigit(str[i]);
  	if(y==0){
  		x+=1;
	  }
  }
  if(x==0){
  	
  while (n != 0) {
    remainder = n % 10;
    reverse = reverse * 10 + remainder;
    n /= 10;
  }
  if(reverse==0){
  	printf("Invalid input");
  }
  else{
  printf("Reversed number = %d", reverse);
}
}
else{
	printf("Invalid input");
}
}
else{
	temp=(n<0)?(-1*n):n;
  while (n != 0) {
    remainder = n % 10;
    reverse = reverse * 10 + remainder;
    n /= 10;
  }
  if(reverse==0){
  	printf("Invalid input");
  }
  else{
  reverse=(n<0)?(-1*reverse):reverse;
  printf("Reversed number = %d", reverse);
}
}
}
3.	Compile and Execute the C program to find the Factorial of a positive integer (number) is the sum of multiplication of all the integers smaller than that positive integer. N! is denoted as factorial of N. For example, factorial of 5 is 5 * 4 * 3 * 2 * 1 which equals to 120.

Sample Input:
N = 5
Sample Output:
120 

Test cases:
1.	N = 0
2.	N = -5
3.	N = 1
4.	N = Q
5.	N = 3A
Source code:
#include <stdio.h>

main() {
  char str[100];
  int i,n, f=1;
  printf("Enter an integer: ");
  scanf("%d", &n);
  //n = atoi(str);
  if(n>=0){
	if(n>=0){
	while(n>0){
		f=f*n;
		n--;
	}
  printf("Factorial = %d", f);
}
}
else{
	printf("Invalid input");
}
}
4.	Suppose the number to be check is 6: The user has provided one number that is ‘6’, now we have to think and calculate by which other numbers we can divide ‘6’ and get the remainder as ‘0’. If the remainder is zero, then we can say that ‘6’ is divisible by that number and we can take this number into consideration to get the sum by using some more other numbers. Compile and execute the above C program.
Sample Input:
Given Number: 6

Sample Output:
Its a Perfect Number 

Test cases:
1.	17
2.	26!
3.	143
4.	84.1
5.	-963
#include <stdio.h>

main() {
  char str[100];
  int i,n, f=1;
  printf("Enter an integer: ");
  scanf("%d", &n);
  //n = atoi(str);
  if(n>=0){
	if(n>=0){
	while(n>0){
		f=f*n;
		n--;
	}
  printf("Factorial = %d", f);
}
}
else{
	printf("Invalid input");
}
}
5.Compile and Execute the C program were the user to enter an integer to compute the square, cube of the given decimal number using standard method.

Sample Input:
Given Number: 0.6

Sample Output:
Square Number: 0.36
Cube Number:0.216 

Test cases:
1.	12
2.	0 
3.	-0.5
4.	14.25
5.	-296
#include<stdio.h>
main(){
float i,s,c,n;
printf("Enter a number :");
scanf("%f",&n);
if(n<0){
	printf("Invalid input");
}
else{
	s=n*n;
	c=s*n;
	printf("square = %.2f \n cube = %.2f",s,c);
}
}
6.	Compile and Execute the C program to find whether the person is eligible for vote or not. And if that particular person is not eligible, then print how many years are left to be eligible.

Sample Input:
 Enter your age: 7

Sample output:
You are allowed to vote after 11 years
Test cases:
1.	25
2.	Eighteen
3.	12
4.	-18
5.	34.5

#include<stdio.h>
main()
{
int age,x;
printf("enter your age:");
scanf("%d",&age);
if(age<=0){
	printf("Invalid input");
}
else{
printf("You can vote in %d years",18-age);
}
}
7.	Compile and Execute the C program to check whether the number divisible by 2, then print the given number even otherwise odd. Check and display the output on the screen.

Sample Input:
Enter the number : 6561

Sample Output:
The given number is odd

Test cases:
1.	0
2.	-1254
3.	A144
4.	145.23
5.	23.456
#include<stdio.h>
main()
{
int n;
printf("enter a number:");
scanf("%d",&n);
if(n<=0){
	printf("Invalid input");
}
else{
if(n%2==0){
	printf("even");
}
else{
	printf("odd");
}
}
}

8.	Compile and Execute the C program to print numbers from P to Q but except  
            the digit R using continue statement. Check and display the output on the screen.
Sample Input:
P = 60
Q = 70
R = 3

Sample Output:
Numbers are = 60, 61, 62, 64, 65, 66, 67, 68, 69, 70

Test cases:
1.	P = 200, Q = 200, R = 5
2.	P = 100, Q = 200, R = 0
3.	P = -100, Q = 100, R = 5
4.	P = 1073, Q = 1075, R = 4
5.	P = 444, Q = 499, R = 4

#include<stdio.h>
main()
{
int n,m,i,x,ch,r;
printf("enter start range:");
scanf("%d",&n);
printf("enter end range:");
scanf("%d",&m);
printf("Enter a number:");
scanf("%d",&x);
if(n<=0 || m<=0 || n==m || n>m || x<=0){
	printf("Invalid input");
}
else{
for(i=n;i<=m;i++){
	if(n<10){
	if(i!=x){
	printf("%d ",i);
}
}
else{
	for(i=n;i<=m;i++){
		if(i%10!=x){
			printf("%d ",i);
		}
		else{
			continue;
		}
}
}
}
}
}
9.	Write a program to print the following pattern. Get the number of rows from the user.
Sample input:
Number of Rows: 5
Sample output:
           	  1
            2  1
           3  2  1
         4  3  2  1
       5  4  3  2  1
Test case:
Number of Rows: 0.5
Test Condition:
Number of Rows: 5
Sample Output:
	1
          4  1
        9  4  1
      16 9 4  1
     25 16 9 4 1
#include <stdio.h>
main()
{
int i,j,k,l,n;
printf("Enter number of rows:");
scanf("%d",&n);
l=n-1;
for(i=1;i<=n;i++){
	for(j=1;j<=l;j++){
		printf(" ");
	}
	l-=1;
	for(k=i;k>=1;k--){
		printf("%d ",k);
	}
	printf("\n");
}
printf("Test condition :\n");
l=n-1;
for(i=1;i<=n;i++){
	for(j=1;j<=l;j++){
		printf(" ");
	}
	l-=1;
	for(k=i;k>=1;k--){
		printf("%d ",k*k);
	}
	printf("\n");
}
}
10.	Write a program to print the below pattern.
Sample Input:
Number of line: 4
Sample output:
1
2  2
3   3  3
4  4  4  4
Test case:
Number of line:0.4
Test condition:
Number of line:4
0.1
0.2  0.2
0.3  0.3  0.3  
0.4  0.4  0.4  0.4
#include <stdio.h>
main()
{
int i,j,n,k;
float x;
printf("Enter number of rows:");
scanf("%d",&n);
for(i=1;i<=n;i++){
	for(j=1;j<=i;j++){
		printf("%d ",i);
	}
	printf("\n");
}
printf("Test condition :\n");
for(k=1;k<=n;k++){
	x+=1;
	for(j=1;j<=k;j++){
		printf("%.2f",x/10);
	}
	printf("\n");
}
}

11.	Compile and Execute the C program to print the multiplication table of number m up to n.
Sample Input:
M = 4
N = 5
Sample Output:
1x4=4
2x4=8
3x4=12
4x4=16
5x4=20
Test cases:
1.	M = 6, N = -3
2.	M = -3, N = 5
3.	M = 4, N = 0
4.	M = 0, N = 0
5.	M = -5, N = -5
#include<stdio.h>
main()
{
int i,j,n,m;
printf("Enter a number :");
scanf("%d",&n);
printf("Enter number of numbers :");
scanf("%d",&m);
if(n>0 && m>0){
	for(i=1;i<=m;i++){
		printf("%d x %d = %d\n",n,i,n*i);
	}
}
else{
	printf("Invalid input");
}
}
12.	Write a program to find the number of composite numbers in an array of elements
           Sample Input;:
Array of elements = {16, 18, 27, 16, 23, 21, 19}
Sample Output:
Number of Composite Numbers = 5 
Test cases:
1.Array of elements = {26, 28, 37, 26, 33, 31, 29}
2. Array of elements = {1.6, 1.8, 2.7, 1.6, 2.3, 2.1, .19}
3. Array of elements = {0, 160, 180, 270, 160, 230, 210, 190, 0}
4. Array of elements = {200, 180, 180, 270, 270, 270, 190, 200}
5. Array of elements = {100, 100, 100, 100, 100, 100, 100, 100}

#include<stdio.h>
main()
{
int i,j,n,m,arr[20],co=0,ch;
printf("Enter a number of elements:");
scanf("%d",&n);
for(i=0;i<n;i++){
	printf("enter an element :");
	scanf("%d",&arr[i]);
}
	for(i=0;i<n;i++){
		ch=0;
		for(j=1;j<=arr[i];j++){
			if(arr[i]%j==0){
				ch+=1;
			}
			}
			if(ch>2){
				co+=1;
		}
	}
	printf("Number of Composite numbers : %d",co);
}

13.	Write a program to print the number of negative numbers in an array of numbers
Sample Input;
Array of elements = {16, -18, 27, -16, 23, -21, 19}
Sample Output:
Number of negative numbers in Array elements = 3 
Test cases:
1.Array of elements = {-26, 28, 37, -26, 33, -31, -29}
2. Array of elements = {1.6, 1.8, 2.7, -1.6, 2.3, -2.1, .19}
3. Array of elements = {0, 160, 180, 270, 160, 230, 210, 190, 0}
4. Array of elements = {-16, 2.8, -7, -1.5, 2.8, -2.8, -.19}
5. Array of elements = {-160, -160, -180, -270, -160, -230, -210, 1-90, 0}
#include<stdio.h>
main()
{
int i,j,n,m,arr[20],neg=0;
printf("Enter the number of elements:");
scanf("%d",&n);
for(i=0;i<n;i++){
	printf("enter an element :");
	scanf("%d",&arr[i]);
}
	for(i=0;i<n;i++){
		if(arr[i]<0){
			neg+=1;
		}
	}
	printf("Number of negative numbers : %d",neg);
}
14.	Write a program to reverse an array
Sample Input;
Array of elements = {16, 18, 27, 16, 23, 21, 19}
Sample Output:
Reverse Array elements = {19, 21 23, 16, 27, 18, 16} 
Test cases:
1.Array of elements = {26, 28, 37, 26, 33, 31, 29}
2. Array of elements = {1.6, 1.8, 2.7, 1.6, 2.3, 2.1, .19}
3. Array of elements = {0, 160, 180, 270, 160, 230, 210, 190, 0}
4. Array of elements = {200, 180, 180, 270, 270, 270, 190, 200}
5. Array of elements = {100, 100, 100, 100, 100, 100, 100, 100}
#include<stdio.h>
main()
{
int i,j=0,n,arr[20],narr[20];
printf("Enter the number of elements:");
scanf("%d",&n);
for(i=0;i<n;i++){
	printf("enter an element :");
	scanf("%d",&arr[i]);
}
	for(i=n-1;i>=0;i--){
		printf("%d ",arr[i]);
	}
}

15.	The transpose of a matrix is found by interchanging its rows into columns or columns into rows. Write a program to find the Transpose of a given Matrix.
Sample input:
1  2
5  3
Output:
1 5
2 3
#include <stdio.h>
main() {
  int a[10][10], transpose[10][10], r, c,i,j;
  printf("Enter rows and columns: ");
  scanf("%d %d", &r, &c);
  printf("\nEnter matrix elements:\n");
  for (i = 0; i < r; ++i)
  for (j = 0; j < c; ++j) {
    printf("Enter element a%d%d: ", i + 1, j + 1);
    scanf("%d", &a[i][j]);
  }
  printf("\nEntered matrix: \n");
  for (i = 0; i < r; ++i)
  for (j = 0; j < c; ++j) {
    printf("%d  ", a[i][j]);
    if (j == c - 1)
    printf("\n");
  }
  for (i = 0; i < r; ++i)
  for (j = 0; j < c; ++j) {
    transpose[j][i] = a[i][j];
  }
  printf("\nTranspose of the matrix:\n");
  for (i = 0; i < c; ++i)
  for (j = 0; j < r; ++j) {
    printf("%d  ", transpose[i][j]);
    if (j == r - 1)
    printf("\n");
  }
}
16.	Program to remove duplicates from the sorted array
Sample Input:
rray = {15, 14, 25, 14, 32, 14, 31}
Sample Output:
ed Array = {14, 15, 25, 31, 32}
Test cases:
1. {16, 16, 16 16, 16}
2. {0, 0, 0, 0}
3. {-12, -78, -35, -42}
4. {1,2,3,7,8,9,4,5,6}
5. {1-2,2-3,3-4,4-5,5-6}
#include <stdio.h>  
#include <conio.h>  
int main ()  
{   
    int arr[20], i, j, k, size, l,x;  
    printf ("enter the number of elements: ");  
    scanf (" %d", &size);  
      
    printf (" \n Enter %d elements of the array: \n ", size);  
    for ( i = 0; i < size; i++)  
    {  
        scanf (" %d", &arr[i]);  
    }  
    for ( i = 0; i < size; i ++)  
    {  
        for ( j = i + 1; j < size; j++)  
        {   
            if ( arr[i] == arr[j])  
            { 
                for ( k = j; k < size - 1; k++)  
                {  
                    arr[k] = arr [k + 1];  
                }  
                size--;  
                j--;      
            }  
        }  
    }  
    for (j=0;j<=size-1;j++)
	{
	for (k=j+1;k<=size-1;k++)
	{
		if (arr[j]>arr[k])
		{
			x=arr[k];
			arr[k]=arr[j];
			arr[j]=x;
		}
	}
	}
	printf("Array after removing duplicates:\n");
	for (l=0;l<=size-1;l++)
	{
		printf("%d ",arr[l]);
	}
}  

17.	Write a program to search the given element and display its position in a linear array.
Sample Input;:
Array of elements = {16, 18, 27, 16, 23, 21, 19}
Element to search = 23
Sample Output:
Given element 23 is found at 5 th position

#include <stdio.h>
main() {
  int array[30],x,n,i,p=0,ch=0;
  	printf("Enter the number of elements:");
	scanf("%d",&n);
	for(i=0;i<n;i++){
	printf("enter an element :");
	scanf("%d",&array[i]);
}
printf("Enter an element to search :");
scanf("%d",&x);
  for (i = 0; i < n; i++){
    if (array[i] == x){
    	p=i;
    	ch+=1;
	}
}	
  if(ch==0){
  	printf("Element not found");
  }
  else{
  	printf("Element found at position: %d", p+1);
  }
}
18.	Write a program in C to add two numbers using pointers. 
 Test Data :
Input the first number : 5
Input the second number : 6
Expected Output :
The sum of the entered numbers is : 11 
Test cases:
1. X = 0 , N = 4
2. X = 5 , N = 0
3. X = -3 , N = 3
4. X = 0 ,  N = 0
5. X = 123, N = 123
#include <stdio.h>
main()
{
   int n, m, *p, *q, sum;

   printf("Enter two integers to add\n");
   scanf("%d%d", &n, &m);

   p = &n;
   q = &m;

   sum = *p + *q;

   printf("Sum of the numbers = %d\n", sum);

   return 0;
}
19.	Write a program in C to find the maximum number between two numbers using a pointer. 
 Test Data :
Input the first number : 5
Input the second number : 6
Expected Output :
a.	is the maximum number.  
             Test cases:
1.	X = 0 , N = 4
2.	X = 5 , N = 0
3.	X = -3 , N = 3
4.	X = 0 ,  N = 0
5.	X = 123, N = 123
#include<stdio.h>

main()

{

	int n,m;

	int *ptr1,*ptr2;

	

	printf("Enter first number:\n");

	scanf("%d",&n);

	printf("Enter second number:\n");

	scanf("%d",&m);

	ptr1=&n;

	ptr2=&m;

	if(*ptr1>*ptr2)

	{

	printf("Maximum number is %d",*ptr1);

	}

	else

	{

	printf("Maximum number is %d",*ptr2);

	}
}

20.	Write a program in C to find the largest element using Dynamic Memory Allocation. 
Test Data :
Input total number of elements(1 to 100): 5
Number 1: 5
Number 2: 7
Number 3: 2
Number 4: 9
Number 5: 8
Expected Output :
The Largest element is :  9.00 
Test Cases:
1. N = 0,1,3,8,7,-5
2. N = 5,5,5,5,5,5.4
3. N = -2,2,-2,4,-4
4. N = -5,55,30,0.5
5. N = 0.2,2,4,5,8
#include <stdio.h>
#include <stdlib.h>

main() {

  int n,i;
  double *data;
  printf("Enter the total number of elements: ");
  scanf("%d", &n);
  data = (double *)calloc(n, sizeof(double));
  if (data == NULL) {
    printf("Error!!! memory not allocated.");
    exit(0);
  }
  for (i = 0; i < n; ++i) {
    printf("Enter number%d: ", i + 1);
    scanf("%lf", data + i);
  }
  for (i = 1; i < n; ++i) {
    if (*data < *(data + i)) {
      *data = *(data + i);
    }
  }
  printf("Largest number = %.2lf", *data);

  free(data);
}
21.	Write a program in C to Calculate the length of the string using a pointer 
Test Data :
Input a string : SAVEETHA
Expected Output :
            The length of the given string saveetha is : 8 
#include<stdio.h>

main() {
  char str[20], *pt;
  int i = 0;
  printf("Enter Any string: ");
  scanf("%s",&str);
  pt = str;
  while (*pt != '\0') {
    i++;
    pt++;
  }
  printf("Length of String : %d", i);

}
22.	Write a program in C to compute the sum of all elements in an array using pointers.  
        Test Data :
         Input the number of elements to store in the array (max 10) : 5
         Input 5 number of elements in the array :
          element - 1 : 2
          element - 2 : 3
            element - 3 : 4
            element - 4 : 5
            element - 5 : 6
  	Expected Output :
            The sum of array is : 20 
 Test cases:
1. A = 11, B = 11
2. A = 20, B = 10
3. A = 0, B = 0
4. A = -5, B = 5
5. A = 7, B = -12
#include <stdio.h>
#include <malloc.h>
main(){
   int i, n, sum = 0;
   int *ptr;
   printf("Enter size of array : ");
   scanf("%d", &n);
   ptr = (int *) malloc(n * sizeof(int));
   printf("Enter elements in the List ");
   for (i = 0; i < n; i++){
      scanf("%d", ptr + i);
   }
   for (i = 0; i < n; i++){
      sum = sum + *(ptr + i);
   }
   printf("Sum of all elements in an array is = %d", sum);
}
23.	Write a program in C to find the square of any number using the function. 
Test Data :
Input any number for square : 20
Expected Output :
           The square of 20 is : 400.00
           Test cases:
1. 12
2. 0 
3. -0.5
4. 14.25
5. -296
#include <stdio.h>
#include <malloc.h>
sqr(float x){
	return x*x;
}
main(){
   float x,r;
   printf("Enter a number:");
   scanf("%f",&x);
   if(x>0){
   r=sqr(x);
   printf("Square: %.2f",r);
}
else{
	printf("Invalid input");
}
}
24.	Write a program in C to check a given number is even or odd using the function.  
        Test Data :
        Input any number : 5
       Expected Output :
      The entered number is odd.  
        Test cases:
1. N = 16
2. N = -8
3. N = 0
4. N = -10.01
5. N = 11.22
#include <stdio.h>
#include <malloc.h>
ore(int x){
	if(x%2==0){
		return 2;
	}
	else{
		return 1;
	}
}
main(){
   int x,r;
   printf("Enter a number:");
   scanf("%d",&x);
   if(x>0){
   r=ore(x);
   if(r==1){
   	printf("odd");
   }
   else if(r==2){
   	printf("even");
   }
}
else{
	printf("Invalid input");
}
}
25.	Write a program in C to get the largest element of an array using the function.  
       Test Data :
        Input the number of elements to be stored in the array :5
       Input 5 elements in the array :
       element - 0 : 1
       element - 1 : 2
       element - 2 : 3
      element - 3 : 4
      element - 4 : 5
     Expected Output :
     The largest element in the array is : 5 
           Test Cases:
6. N = 0,1,3,8,7,-5
7. N = 5,5,5,5,5,5.4
8. N = -2,2,-2,4,-4
9. N = -5,55,30,0.5
10. N = 0.2,2,4,5,8
#include<stdio.h>
int i,j,k,x,l;
max(int a[20],int n){
	for (j=0;j<=n-1;j++)
	{
	for (k=j+1;k<=n-1;k++)
	{
		if (a[j]>a[k])
		{
			x=a[k];
			a[k]=a[j];
			a[j]=x;
		}
	}
	}
	return a[n-1];
}
main()
{
	int n,m;
	printf("Enter number of elemets in array:\n");
	scanf("%d",&n);
	int a[20];
	
	for (i=0;i<=n-1;i++)
	{
	printf("enter element %d:\n",i+1);
	scanf("%d",&a[i]);
	}
	m=max(a,n);
	printf("Maximum element : %d",m);
}

26.	Write a program to calculate Pow(x,n), Add(x,n), Sub(x,n), Mul(x,n), Div(x,n)? Get the input and choice from the user.
Sample Input:
X = 2
N = 4
Choice : 2
Sample Output:
Add(X,N) = 6
            Test cases:
27.	X = 0 , N = 4
28.	X = 5 , N = 0
29.	X = -3 , N = 3
30.	X = 0 ,  N = 0
31.	X = 123, N = 123


#include<stdio.h>
  int a,b,c,d,e,f,x,z=1;
  int choice()
  {
  	scanf("%d",&x);
  	if(x==1){
  		while (b != 0) {
        z *= a;
        --b;
    }
    printf("Power of given numbers is %d\n",z);
	  }
  	else if (x==2)
	{
   	c=add(a,b);
   	printf("Sum of given numbers is %d\n",c);
   }
   else if (x==3)
   { 
   	d=sub(a,b);
   	printf("differnce of given numbers is %d\n",d);
   }
   else if (x==4)
   {
	e=mul(a,b);
	printf("product of given numbers is %d\n",e);
	}
	else if (x==5)
	{
	f=div(a,b);
	printf("quotient of given numbers is %.2f",f);
	}
	else
	{
	printf("invalid input... Try again\n");
	choice();
	}
}
   int add(int x,int y)
   {
   	int z;
   	z=x+y;
   	return z;
   }
   int sub(int x,int y)
   {
   	int z;
   	if (x>y)
   	{
   	z=x-y;
   }
   else
   {
   z=y-x;
   return z;
	}
}
   int mul(int x,int y)
   {
   	int z;
   	z=x*y;
   	return z;
   }
    int div(int x,int y)
   {
   	int z;
   	z=(float)x/y;
   	return z;
   }
   main()
   {
   	printf("Enter 2 numbers:\n");
	scanf("%d%d",&a,&b);
	printf("Choose an opertaion:\n 1:power\n 2:addition\n 3:subtraction\n 4:multiplication\n 5:division\n");
	choice();
   	
 }

27.	Write a program to store information of n students ( Roll No, Name, Marks )  in structure and display it. 
Sample Input :
Enter No.Students: 1
Enter student 1 Roll No.,  name, Marks: 2001, AAA, 98

Sample Output: 
Student 1 details:
Roll no.: 2001
Name: AAA
Marks: 98

Test Cases:

No.Student :4 (Any details of student)
No.Student: 5
No.Student: 1(2005, 4563, 62)
No.Student: A
No.Student: 1( xxx, John, 98.2)

#include <stdio.h>
struct student {
    char name[50];
    int roll;
    float marks;
} s;

int main() {
    printf("Enter information:\n");
    printf("Enter name: ");
    fgets(s.name, sizeof(s.name), stdin);

    printf("Enter roll number: ");
    scanf("%d", &s.roll);
    printf("Enter marks: ");
    scanf("%f", &s.marks);

    printf("Displaying Information:\n");
    printf("Name: ");
    printf("%s", s.name);
    printf("Roll number: %d\n", s.roll);
    printf("Marks: %.1f\n", s.marks);

    return 0;
}
28.	Write a program to input and print student data using pointer object of structure.
Sample Input :
Enter No.Students: 1
Enter student 1 Roll No.,  name, Marks: 2001, AAA, 98

Sample Output: 
Student 1 details:
Roll no.: 2001
Name: AAA
Marks: 98

Test Cases:

No.Student :4 (Any details of student)
No.Student: 5
No.Student: 1(2005, 4563, 62)
No.Student: A
No.Student: 1( xxx, John, 98.2) 

#include <stdio.h>
struct student {
    char name[50];
    int roll;
    float marks;
} s;

int main() {
    printf("Enter information:\n");
    printf("Enter name: ");
    fgets(s.name, sizeof(s.name), stdin);

    printf("Enter roll number: ");
    scanf("%d", &s.roll);
    printf("Enter marks: ");
    scanf("%f", &s.marks);

    printf("Displaying Information:\n");
    printf("Name: ");
    printf("%s", s.name);
    printf("Roll number: %d\n", s.roll);
    printf("Marks: %.1f\n", s.marks);

    return 0;
}



29.	Write a C Program to  print the book details( Title , author, Subject,bookid - s structure member) using structures as Function Arguments
Sample input:
Enter the number of books: 1
Enter the book 1 title : C Programming
Enter the book 1 Author:  Nuha Al
Enter the Book 1 subject : C Programming Tutorial
Enter the Book 1 book_id : 6495407

Sample output:
Book 1 title : C Programming
Book 1 author : Nuha Ali
Book 1 subject : C Programming Tutorial
Book 1 book_id : 6495407


Test Case:

No.books :4 (Any details of books)
No.books: 5
No.books: 1(2005,aaa ccc, 62)
No.Student: A
No.Student: 1( xxx,123,yyyy  98.2)
#include<stdio.h>
#include<string.h>
struct book
{
int bookid;
char title[30];
char author[20];
};
void print_book(struct book b1);
main()
{
struct book b1;
printf("\n enter book details: ");
scanf("%d%s%s",&b1.bookid,b1.title,b1.author);

print_book(b1);
}
voidprint_book(struct book b1)
{
printf("\n book details:%d\t %s\t %s\t ",b1.bookid,b1.title,b1.author);
}

30.	Write a C Program to Calculate Total and Percentage marks of a student using structure. 
Input: 
Enter RollNo,: 12
 Name :  rama 
 three sub marks 30 40 50

 Output: 
rollno=12 
Name=rama 
m1=30 m2=40 m3=50 total=120 per=40.000000 

Test Case

24, AA, 77,65,75
22, BB, 56,62,50
23,CC. 42,45,38
25, Annie 55,65,74
26, joy. 85,84,87

#include <stdio.h>
 
struct student
{
    char name [30];
    int  marks[ 5];
    int  total;
    float percentage;
};
 
int main()
{
    struct student std;
    int i;
 
    printf("Enter name: ");
    gets(std.name);
 
    printf("Enter marks:\n");
    std.total=0;
    for(i=0;i< 5;i++){
        printf("Marks in subject %d: ",i+1);
        scanf("%d",&std.marks[i]);
        std.total+=std.marks[i];
    }
    std.percentage=(float)((float)std.total/(float)500)*100;
 
    printf("\nName: %s \nTotal Marks: %d \nPercentage: %.2f",std.name,std.total,std.percentage);
 
    return 0;
}
